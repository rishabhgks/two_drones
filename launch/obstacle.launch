<?xml version="1.0"?>

<launch>
    <param name="/use_sim_time" value="true"/>
      <!-- Start Gazebo with wg world running in (max) realtime -->
    <include file="$(find hector_gazebo_worlds)/launch/rolling_landscape_120m.launch"/>

    <!-- <include file="$(find multirobot_map_merge)/launch/map_merge.launch" /> -->

    <group ns="drone1">
        <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch" >
            <arg name="tf_prefix" value="drone1" />
            <arg name="name" value="drone1" />
            <arg name="x" value="-5.0" />
            <arg name="y" value="-20.0" />
            <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_hokuyo_utm30lx.gazebo.xacro"/>
            <arg name="controllers" value="
            controller/attitude
            controller/velocity
            controller/position
            "/>
        </include>
        <include file="$(find two_drones)/launch/quadrotor_gmapping.launch" >
            <arg name="scan_topic"  value="/drone1/scan" />
            <arg name="base_frame"  value="/drone1/base_footprint"/>
            <arg name="odom_frame"  value="/drone1/world"/>
        </include>
        <node pkg="tf" type="static_transform_publisher" name="map_to_drone1_broadcaster" args="0 0 0 0 0 0 map drone1/map 100"/>
        <include file="$(find two_drones)/launch/quadrotor_localization.launch" >
            <arg name="scan_topic"  value="/drone1/scan" />
            <arg name="base_frame_id"  value="/drone1/base_footprint"/>
            <arg name="odom_frame_id"  value="/drone1/world"/>
            <arg name="global_frame_id"  value="/drone1/map"/>
        </include>
        <include file="$(find two_drones)/launch/quadrotor_move_base.launch" >
            <arg name="base_frame_id"  value="/drone1/base_footprint"/>
            <arg name="odom_frame_id"  value="/drone1/world"/>
            <arg name="global_frame_id"  value="/drone1/map"/>
            <arg name="odom_topic" value="ground_truth/state" />
            <arg name="laser_topic" value="/drone1/scan" />
        </include>
        <node pkg="gps_common" type="utm_odometry_node" name="utm_odometry_drone1" output="screen" >
            <param name="frame_id" value="drone1/map"/>
            <param name="child_frame_id" value="drone1/base_link"/>
        </node>
        <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_node" output="screen">
            <param name="use_mag" value="true"/>
            <param name="world_frame" value="enu"/>
            <param name="use_magnetic_field_msg" value="false"/>
            <param name="fixed_frame" value="/drone1/imu"/>
            <param name="publish_tf" value="true"/>
            <remap from="/drone1/imu/data_raw" to="/drone1/raw_imu"/>
            <remap from="/drone1/imu/mag" to="/drone1/magnetic"/>
            <remap from="/drone1/imu/data" to="/drone1/raw_imu/data"/>
        </node>
    </group>

    <group ns="drone2">
        <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch" >
            <arg name="tf_prefix" value="drone2" />
            <arg name="name" value="drone2" />
            <arg name="x" value="-9.0" />
            <arg name="y" value="22.0" />
            <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_hokuyo_utm30lx.gazebo.xacro"/>
            <arg name="controllers" value="
            controller/attitude
            controller/velocity
            controller/position
            "/>
        </include>     
        <include file="$(find two_drones)/launch/quadrotor_gmapping.launch" >
            <arg name="scan_topic"  default="/drone2/scan" />
            <arg name="base_frame"  default="/drone2/base_footprint"/>
            <arg name="odom_frame"  default="/drone2/world"/>
        </include>
        <node pkg="tf" type="static_transform_publisher" name="map_to_drone2_broadcaster" args="0 0 0 0 0 0 map drone2/map 100"/>
        <include file="$(find two_drones)/launch/quadrotor_localization.launch" >
            <arg name="scan_topic"  default="/drone2/scan" />
            <arg name="base_frame_id"  default="/drone2/base_footprint"/>
            <arg name="odom_frame_id"  default="/drone2/world"/>
            <arg name="global_frame_id"  default="/drone2/map"/>
        </include>
        <include file="$(find two_drones)/launch/quadrotor_move_base.launch" >
            <arg name="base_frame_id"  default="/drone2/base_footprint"/>
            <arg name="odom_frame_id"  default="/drone2/world"/>
            <arg name="global_frame_id"  default="/drone2/map"/>
            <arg name="odom_topic" default="ground_truth/state" />
            <arg name="laser_topic" default="/drone2/scan" />
        </include>
        <node pkg="gps_common" type="utm_odometry_node" name="utm_odometry_drone2" output="screen">
            <param name="frame_id" value="drone2/map"/>
            <param name="child_frame_id" value="drone2/base_link"/>
        </node>
        <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_node2" output="screen">
            <param name="use_mag" value="true"/>
            <param name="world_frame" value="enu"/>
            <param name="use_magnetic_field_msg" value="false"/>
            <param name="fixed_frame" value="/drone2/imu"/>
            <param name="publish_tf" value="true"/>
            <remap from="/drone2/imu/data_raw" to="/drone2/raw_imu"/>
            <remap from="/drone2/imu/mag" to="/drone2/magnetic"/>
            <remap from="/drone2/imu/data" to="/drone2/raw_imu/data"/>
        </node>
    </group>

    <group ns="drone3">
        <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch" >
            <arg name="tf_prefix" value="drone3" />
            <arg name="name" value="drone3" />
            <arg name="x" value="0.0" />
            <arg name="y" value="0.0" />
            <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_hokuyo_utm30lx.gazebo.xacro"/>
            <arg name="controllers" value="
            controller/attitude
            controller/velocity
            controller/position
            "/>
        </include>
        <include file="$(find two_drones)/launch/quadrotor_gmapping.launch" >
            <arg name="scan_topic"  value="/drone3/scan" />
            <arg name="base_frame"  value="/drone3/base_footprint"/>
            <arg name="odom_frame"  value="/drone3/world"/>
        </include>
        <node pkg="tf" type="static_transform_publisher" name="map_to_drone3_broadcaster" args="0 0 0 0 0 0 map drone3/map 100"/>
        <include file="$(find two_drones)/launch/quadrotor_localization.launch" >
            <arg name="scan_topic"  value="/drone3/scan" />
            <arg name="base_frame_id"  value="/drone3/base_footprint"/>
            <arg name="odom_frame_id"  value="/drone3/world"/>
            <arg name="global_frame_id"  value="/drone3/map"/>
        </include>
        <include file="$(find two_drones)/launch/quadrotor_move_base.launch" >
            <arg name="base_frame_id"  value="/drone3/base_footprint"/>
            <arg name="odom_frame_id"  value="/drone3/world"/>
            <arg name="global_frame_id"  value="/drone3/map"/>
            <arg name="odom_topic" value="ground_truth/state" />
            <arg name="laser_topic" value="/drone3/scan" />
        </include>
        <node pkg="gps_common" type="utm_odometry_node" name="utm_odometry_drone3" output="screen" >
            <param name="frame_id" value="drone3/map"/>
            <param name="child_frame_id" value="drone3/base_link"/>
        </node>
        <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_node" output="screen">
            <param name="use_mag" value="true"/>
            <param name="world_frame" value="enu"/>
            <param name="use_magnetic_field_msg" value="false"/>
            <param name="fixed_frame" value="/drone3/imu"/>
            <param name="publish_tf" value="true"/>
            <remap from="/drone3/imu/data_raw" to="/drone3/raw_imu"/>
            <remap from="/drone3/imu/mag" to="/drone3/magnetic"/>
            <remap from="/drone3/imu/data" to="/drone3/raw_imu/data"/>
        </node>
    </group>

    <node pkg="two_drones" name="obstacle_node" type="obstacle_node" output="screen"/>

    <!-- Start rviz visualization with preset config -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find hector_quadrotor_demo)/rviz_cfg/outdoor_two_drone_map_task1.rviz"/>

</launch>